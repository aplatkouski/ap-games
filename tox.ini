[tox]
envlist = py38,coverage,check
minversion = 3.3.0
isolated_build = true

[tool:pytest]
swapdiff = 1

[coverage:run]
branch = True
source =
    ap_games
    tests
omit =
    */setup.py
    */**/__init__.py

[coverage:paths]
# Enable `coverage combine` to convert long `.tox/**/site-packages` paths to
# short `src/` paths. The former is a side-effect of running tests using the
# installed package. See https://hynek.me/articles/testing-packaging/#cc.
source =
    src/
    */site-packages/

[coverage:report]
# fail_under = 60
exclude_lines =
    # a more strict default pragma
    \# pragma: no cover\b
    # allow defensive code
    ^\s*raise AssertionError\b
    ^\s*raise NotImplementedError\b
    ^\s*return NotImplemented\b
    ^\s*raise$
    # typing-related code
    ^if TYPE_CHECKING:
    : \.\.\.$
    ^ +\.\.\.$
    -> NoReturn:
    # non-runnable code
    if __name__ == ['"]__main__['"]:$

[flake8]
exclude =
    .tox,
    *.egg,
    build,
    data
max-line-length = 79
select = B,C,E,F,W
ignore =
    W503  # Line break occurred before a binary operator
mypy_config = setup.cfg
max-complexity = 10

[pydocstyle]
convention = pep257
match_dir = (scripts|src|tests)
add_ignore =
    D100,  # Missing docstring in public module
    D104,  # Missing docstring in public package
    D107,  # Missing docstring in __init__

[testenv]
description = Run tests with coverage in {envname}
deps = -e .[test]
setenv =
    # Use a unique data file to enable parallel runs
    # Also supports combining in [testenv:coverage]
    COVERAGE_FILE = .coverage.{envname}
commands =
    coverage run -m pytest {posargs:tests}

[testenv:coverage]
# See related config and explanation in [coverage:*]
description = Combine coverage data and generate reports
basepython = python3.8
skip_install = true
depends = py38
deps =
    coverage
setenv =
    COVERAGE_FILE = .coverage
commands =
    # Assuming failure means we've already combined .coverage.*
    -coverage combine
    coverage report
    coverage html

[testenv:check]
description = Run pre-commit checks on all files
basepython = python3.8
skip_install = true
deps =
    check-manifest
    pre-commit
    twine
commands =
    python setup.py check -s
    check-manifest --ignore 'tox.ini,tests/**'
    pre-commit run --all-files --show-diff-on-failure

[testenv:release]
description =
    Upload distribution to TestPyPI after building and checking.
    For PyPI, run `tox -e release pypi`.
basepython = python3.8
skip_install = true
deps =
    wheel
    twine
    setuptools_scm
    keyring
commands =
    python scripts/clean_release.py
    python setup.py sdist bdist_wheel
    twine check dist/*
    python scripts/check_version.py
    twine upload --repository {posargs:testpypi} dist/*
