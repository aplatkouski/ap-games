[tox]
envlist = clean,py38,coverage,check
minversion = 3.3.0
isolated_build = true

[testenv]
description = Run tests with coverage in {envname}
deps = -r requirements-dev.txt
setenv =
    # Use a unique data file to enable parallel runs
    # Also supports combining in [testenv:coverage]
    COVERAGE_FILE = .coverage.{envname}
commands =
    coverage run -m pytest {posargs:tests}

[testenv:coverage]
# See related config and explanation in [coverage:*]
description = Combine coverage data and generate reports
basepython = python3.8
skip_install = true
depends = py38
deps =
    coverage
setenv =
    COVERAGE_FILE = .coverage
commands =
    # Assuming failure means we've already combined .coverage.*
    -coverage combine
    coverage report
    coverage html

[testenv:release]
description =
    Upload distribution to TestPyPI after building and checking.
    For PyPI, run `tox -e release pypi`.
basepython = python3.8
skip_install = true
deps =
    wheel
    twine
    keyring
commands =
    python scripts/clean_release.py
    python setup.py sdist bdist_wheel
    twine check dist/*
    twine upload --repository {posargs:testpypi} dist/*

[testenv:check]
description = Run pre-commit checks on all files
basepython = python3.8
skip_install = true
deps =
    pre-commit
commands =
    python setup.py check --strict --metadata
    pre-commit run --all-files # --show-diff-on-failure

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

[coverage:run]
branch = True
source =
    ap_games
    tests
omit =
    */setup.py
    */**/__init__.py

[coverage:paths]
# Enable `coverage combine` to convert long `.tox/**/site-packages` paths to
# short `src/` paths. The former is a side-effect of running tests using the
# installed package. See https://hynek.me/articles/testing-packaging/#cc.
source =
    src/
    */site-packages/

[coverage:report]
# fail_under = 60
exclude_lines =
    # a more strict default pragma
    \# pragma: no cover\b
    # allow defensive code
    ^\s*raise AssertionError\b
    ^\s*raise NotImplementedError\b
    ^\s*return NotImplemented\b
    ^\s*raise$
    # typing-related code
    ^if TYPE_CHECKING:
    : \.\.\.$
    ^ +\.\.\.$
    -> NoReturn:
    # non-runnable code
    if __name__ == ['"]__main__['"]:$

[check-manifest]
ignore =
    tox.ini
    tests/**

[darglint]
docstring_style=sphinx
strictness=full
ignore_regex=^__(.*)
ignore = DAR201

[flake8]
# Base flake8 configuration:
# https://flake8.pycqa.org/en/latest/user/configuration.html
show-source = True
statistics = False
doctests = True

# Plugins:
max-complexity = 6
max-line-length = 79
# Plugin: application-import-names
import-order-style = google
application-import-names = ap_games,tests
# Plugin: flake8-docstrings
docstring-convention = pep257
# Plugin: flake8-rst-docstrings
rst-roles =
    attr,
    class,
    func,
    meth,
    mod,
rst-directives =
    note,
    warning,
    versionadded,
    versionchanged,
    seealso,
# Plugin: flake8-mypy
mypy_config = setup.cfg

# Disable some pydocstyle checks:
# Exclude some pydoctest checks globally:
ignore =
    D100,  # Missing docstring in public module
    D104,  # Missing docstring in public package
    D106,  # Missing docstring in public nested class
    D107,  # Missing docstring in __init__
    C812,  # flake8-commas: missing trailing comma
    C816,  # missing trailing comma in Python 3.6+
    T499,  # internal mypy traceback, stderr output or an unmatched line
    W503,  # Line break occurred before a binary operator
    WPS305,  # Found `f` string
    WPS433,  # Found nested import
    WPS306,  # Found class without a base class
    WPS326,  # Found implicit string concatenation

# Excluding some directories:
exclude =
    .git,
    __pycache__,
    .tox,
    .venv,
    doc,
    .eggs,
    *.egg,
    build,
    dist,

# Ignoring some errors in some files:
per-file-ignores =
  # Enable `assert` keyword and magic numbers for tests:
  tests/**/*.py: D100, D103, S101, WPS226, WPS309, WPS432

[isort]
src_paths = src,scripts,tests
known_first_party = ap_games
order_by_type = False
# google profile
# https://timothycrosley.github.io/isort/docs/configuration/profiles/
force_single_line = True
force_sort_within_sections = True
lexicographical = True

# https://simpleisbetterthancomplex.com/packages/2016/10/08/isort.html
## change it for the name of your project
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER

[pydocstyle]
convention = pep257
match_dir = (scripts|src|tests)
add_ignore =
    D100,  # Missing docstring in public module
    D104,  # Missing docstring in public package
    D107,  # Missing docstring in __init__

[tool:pytest]
swapdiff = 1

# Directories that are not visited by pytest collector:
norecursedirs = src *.egg .eggs dist build docs .tox .git __pycache__

# Extra options:
addopts =
  --strict
  --tb=short
  --doctest-modules
